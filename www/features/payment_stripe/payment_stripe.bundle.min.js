angular.module("starter").controller("PaymentStripeController",function($scope){angular.extend($scope,{showForm:!1});$scope.toggleForm=function(){$scope.showForm=!$scope.showForm}});angular.module("starter").directive("paymentStripeForm",function(){return{restrict:"E",replace:!0,templateUrl:"features/payment_stripe/assets/templates/l1/payment-stripe-form.html",controller:function($scope,$translate,PaymentStripe){if($scope.options.enableVaults){$scope.buttonText="Save card";$scope.action="card-setup"}else{$scope.buttonText="Pay";$scope.action="card-payment"}
$scope.title="Card details";$scope.validateAction=function(){switch($scope.action){case "card-payment":default:PaymentStripe.handleCardPayment().then(function(payload){$scope._pmOnSelect(payload)});break;case "card-setup":PaymentStripe.handleCardSetup();break}};PaymentStripe.initCardForm()}}});angular.module('starter').directive('paymentStripeCards',function(PaymentMethod){return{restrict:'E',replace:!0,scope:{actions:'=?'},templateUrl:'features/payment_stripe/assets/templates/l1/payment-stripe-cards.html',compile:function(element,attrs){if(!attrs.actions){attrs.actions=[PaymentMethod.ACTION_PAY,PaymentMethod.ACTION_DELETE]}},controller:function($scope,$rootScope,$pwaRequest,$q,$timeout,Dialog,Loader,PaymentStripe){$scope.isLoading=!0;$scope.fetchVaults=function(){$scope.isLoading=!0;PaymentStripe.fetchVaults().then(function(payload){$timeout(function(){$scope.cards=payload.vaults})},function(error){Dialog.alert('Error',error.message,'OK',-1,'payment_stripe')}).then(function(){$scope.isLoading=!1})};$scope.lineActionTrigger=function(card){Loader.show();if($scope.actions.length>0){var firstAction=$scope.actions[0];$scope.doAction(firstAction,card).then(function(payload){switch(firstAction){case PaymentMethod.ACTION_PAY:case PaymentMethod.ACTION_AUTHORIZE:if(typeof $scope.$parent.paymentModal.onSelect==='function'){$scope.$parent.paymentModal.onSelect(payload.intentPayload.paymentId)}
break;default:}},function(error){}).then(function(){Loader.hide()})}};$scope.doAction=function(action,card){var defer=$q.defer();switch(action){default:Dialog.alert('Error',"This action doesn't exists.",'OK',-1).then(function(){defer.reject('Unkown action')});break;case PaymentMethod.ACTION_PAY:PaymentStripe.handleCardPayment({card:card,amount:$scope.$parent.options.payment.amount}).then(function(success){defer.resolve(success)},function(error){defer.reject(error)});break;case PaymentMethod.ACTION_AUTHORIZE:PaymentStripe.handleCardAuthorization({card:card,amount:$scope.$parent.options.payment.amount}).then(function(success){defer.resolve(success)},function(error){defer.reject(error)});break;case PaymentMethod.ACTION_DELETE:Loader.hide();Dialog.confirm('Confirmation','Are you sure you want to delete this payment method?',['YES','NO'],'','payment_stripe').then(function(result){if(result){PaymentStripe.deletePaymentMethod(card).then(function(success){defer.resolve(success)},function(error){defer.reject(error)})}});break}
return defer.promise};$scope.brand=function(brand){var _brand=(brand===undefined)?'':brand.toLowerCase();switch(_brand){case 'visa':return'./features/payment_stripe/assets/templates/images/003-cc-visa.svg';case 'mastercard':return'./features/payment_stripe/assets/templates/images/004-cc-mastercard.svg';case 'american express':return'./features/payment_stripe/assets/templates/images/005-cc-amex.png'}
return'./features/payment_stripe/assets/templates/images/006-cc.svg'};$scope.actionIcon=function(action){switch(action){default:case PaymentMethod.ACTION_PAY:case PaymentMethod.ACTION_AUTHORIZE:return'icon ion-android-arrow-forward';case PaymentMethod.ACTION_DELETE:return'icon ion-trash-a assertive'}};$rootScope.$on('paymentStripeCards.refresh',function(){$scope.fetchVaults()});$rootScope.$on('paymentMethod.refresh',function(){$scope.fetchVaults()});$scope.fetchVaults()}}});angular.module("starter").service("PaymentStripe",function(Application,$rootScope,$injector,$translate,$pwaRequest,$q){var service={card:null,stripe:null,settings:null,isReadyPromise:$q.defer(),publishableKey:null};service.onStart=function(){if(typeof Stripe==="undefined"){var stripeJS=document.createElement("script");stripeJS.type="text/javascript";stripeJS.src="https://js.stripe.com/v3/";stripeJS.onload=function(){service.isReadyPromise.resolve(Stripe);service.fetchSettings().then(function(payload){service.settings=payload.settings;service.setPublishableKey(service.settings.publishable_key)},function(error){console.error(error.message)})};document.body.appendChild(stripeJS)}else{service.isReadyPromise.resolve(Stripe)}};service.isReady=function(){if(!angular.isDefined(service.publishableKey)){return $q.reject($translate.instant("Stripe publishable key is required."))}
return service.isReadyPromise.promise};service.setPublishableKey=function(publishableKey){var deferred=$q.defer();if(publishableKey!==undefined&&publishableKey.length<=0){deferred.reject("publishableKey is required.");throw new Error("publishableKey is required.")}
if(service.publishableKey!==publishableKey||!service.stripe){service.publishableKey=publishableKey;try{service.stripe=Stripe(service.publishableKey)}catch(e){console.warn('[Stripe]: '+e.message)}
try{service.card.destroy()}catch(e){}}
if(!service.stripe){try{service.stripe=Stripe(service.publishableKey);service.card.destroy()}catch(e){}}
deferred.resolve(service.publishableKey);return deferred.promise};service.initCardForm=function(){return service.isReady().then(function(){var cardElementParent=document.getElementById("card_element");try{cardElementParent.firstChild.remove()}catch(e){}
var elements=service.stripe.elements();var style={base:{color:"#32325d",fontFamily:"'Helvetica Neue', Helvetica, sans-serif",fontSmoothing:"antialiased",fontSize:"16px","::placeholder":{color:"#aab7c4"}},invalid:{color:"#fa755a",iconColor:"#fa755a"}};service.card=elements.create("card",{hidePostalCode:!0,style:style});var saveElement=document.getElementById("save_element");var displayError=document.getElementById("card_errors");var displayErrorParent=document.getElementById("card_errors_parent");saveElement.setAttribute("disabled","disabled");service.card.removeEventListener("change");service.card.addEventListener("change",function(event){if(event.error){displayErrorParent.classList.remove("ng-hide");displayError.textContent=event.error.message;saveElement.setAttribute("disabled","disabled")}else{displayErrorParent.classList.add("ng-hide");displayError.textContent="";saveElement.removeAttribute("disabled")}});service.card.mount("#card_element")})};service.handleCardAuthorization=function(options){var deferred=$q.defer();try{var displayError=document.getElementById("card_errors");var displayErrorParent=document.getElementById("card_error_parent");service.fetchPaymentIntent(options).then(function(intentPayload){if(intentPayload.paymentIntent.status==="requires_capture"){deferred.resolve({intentPayload:intentPayload,})}else{service.stripe.handleCardAction(intentPayload.paymentIntent.client_secret).then(function(result){if(result.error){displayErrorParent.classList.remove("ng-hide");displayError.textContent=$translate.instant(result.error.message);service.authorizationError(result.error.message).then(function(payload){deferred.reject(payload)})}else{displayErrorParent.classList.add("ng-hide");service.authorizationSuccess(result).then(function(authorizationPayload){deferred.resolve({intentPayload:intentPayload,authorizationPayload:authorizationPayload});$rootScope.$broadcast("paymentStripeCards.refresh")})}})}},function(error){throw new Error(error.message)})}catch(e){service.setupError(e.message).then(function(payload){deferred.reject(payload)})}
return deferred.promise};service.authorizationError=function(message){return $pwaRequest.post("/paymentstripe/mobile_handler/authorization-error",{data:{message:message}})};service.authorizationSuccess=function(payload){return $pwaRequest.post("/paymentstripe/mobile_handler/authorization-success",{data:{payload:payload}})};service.handleCardPayment=function(options){var deferred=$q.defer();try{var displayError=document.getElementById("card_errors");var displayErrorParent=document.getElementById("card_errors_parent");service.stripe.handleCardPayment(service.card).then(function(result){if(result.error){displayErrorParent.classList.remove("ng-hide");displayError.textContent=$translate.instant(result.error.message);service.paymentError(result.error.message).then(function(payload){deferred.reject(payload)})}else{displayErrorParent.classList.add("ng-hide");service.paymentSuccess(result).then(function(payload){deferred.reject(payload)})}})}catch(e){service.paymentError(e.message).then(function(payload){deferred.reject(payload)})}
return deferred.promise};service.paymentError=function(message){return $pwaRequest.post("/paymentstripe/mobile_handler/payment-error",{data:{message:message}})};service.paymentSuccess=function(payload){return $pwaRequest.post("/paymentstripe/mobile_handler/payment-success",{data:{payload:payload}})};service.handleCardSetup=function(){var deferred=$q.defer();try{var displayError=document.getElementById("card_errors");var displayErrorParent=document.getElementById("card_errors_parent");service.fetchSetupIntent().then(function(payload){service.stripe.handleCardSetup(payload.setupIntent.client_secret,service.card).then(function(result){if(result.error){displayErrorParent.classList.remove("ng-hide");displayError.textContent=$translate.instant(result.error.message);service.setupError(result.error.message).then(function(payload){deferred.reject(payload)})}else{displayErrorParent.classList.add("ng-hide");service.setupSuccess(result).then(function(payload){deferred.resolve(payload);$rootScope.$broadcast("paymentStripeCards.refresh")})}})},function(error){throw new Error(error.message)})}catch(e){service.setupError(e.message).then(function(payload){deferred.reject(payload)})}
return deferred.promise};service.setupError=function(message){return $pwaRequest.post("/paymentstripe/mobile_handler/setup-error",{data:{message:message}})};service.setupSuccess=function(payload){return $pwaRequest.post("/paymentstripe/mobile_handler/setup-success",{data:{payload:payload}})};service.deletePaymentMethod=function(card){return $pwaRequest.post("/paymentstripe/mobile_cards/delete-payment-method",{data:{card:card}})};service.fetchSettings=function(){return $pwaRequest.post("/paymentstripe/mobile_cards/fetch-settings")};service.fetchVaults=function(){return $pwaRequest.post("/paymentstripe/mobile_cards/fetch-vaults")};service.fetchSetupIntent=function(){return $pwaRequest.post("/paymentstripe/mobile_cards/fetch-setup-intent")};service.fetchPaymentIntent=function(options){return $pwaRequest.post("/paymentstripe/mobile_cards/fetch-payment-intent",{data:options})};service.clearForm=function(){service.card.clear();service.card.blur()};return service});Features.insertCSS(":root{--safe-area-inset-top:0;--safe-area-inset-right:0;--safe-area-inset-bottom:0;--safe-area-inset-left:0}@supports (padding-top:constant(safe-area-inset-top)){:root{--safe-area-inset-top:constant(safe-area-inset-top);--safe-area-inset-right:constant(safe-area-inset-right);--safe-area-inset-bottom:constant(safe-area-inset-bottom);--safe-area-inset-left:constant(safe-area-inset-left)}}@supports (padding-top:env(safe-area-inset-top)){:root{--safe-area-inset-top:env(safe-area-inset-top);--safe-area-inset-right:env(safe-area-inset-right);--safe-area-inset-bottom:env(safe-area-inset-bottom);--safe-area-inset-left:env(safe-area-inset-left)}}.platform-overview.platform-cordova{--safe-area-inset-top:1.5em;--safe-area-inset-right:0;--safe-area-inset-bottom:.5em;--safe-area-inset-left:0}#challengeFrame{pointer-events:all!important;user-select:all!important}[name^=\"__privateStripeFrame\"]{user-select:all!important;pointer-events:all!important}","payment_stripe")